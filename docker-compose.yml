services:
  node-exporter:
    image: quay.io/prometheus/node-exporter
    stdin_open: true
    volumes:
    - /:/host:ro,rslave
    - ./web.yml:/etc/prometheus/web.yml
    tty: true
    ports:
    - 9100:9100/tcp
    restart: always
    command:
    - --path.rootfs=/host
    - --web.config.file=/etc/prometheus/web.yml

  prometheus:
    image: prom/prometheus
    stdin_open: true
    volumes:
    - ./data/prometheus:/prometheus
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
    - ./web.yml:/etc/prometheus/web.yml
    tty: true
    ports:
    - 9090:9090/tcp
    restart: always    
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --web.config.file=/etc/prometheus/web.yml
    user: "${UID}:${GID}"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: always

  renderer:
    image: grafana/grafana-image-renderer:3.5.0
    restart: always    

  grafana:
    image: grafana/grafana:7.5.7
    environment:
      GF_LOG_FILTERS: rendering:debug
      GF_RENDERING_CALLBACK_URL: http://renderer:3000/
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource,grafana-image-renderer
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SECURITY_ADMIN_USER: admin
      GF_SERVER_HTTP_PORT: '3000'
      GF_SERVER_PROTOCOL: http
    volumes:
    - ./data/grafana:/var/lib/grafana
    ports:
    - 3001:3000/tcp
    restart: always  
    user: "${UID}:${GID}"